name: Run Django Tests on PR

on:
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest

    env:
      TEAMVAULT_CONFIG_FILE: ${{ github.workspace }}/teamvault.cfg
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/teamvault
      PGPORT: 5432

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: teamvault
          POSTGRES_USER: teamvault
          POSTGRES_PASSWORD: teamvault
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    

    steps:
      - name: Cache APT packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: apt-${{ runner.os }}-${{ hashFiles('.github/apt-packages.txt') }}
          restore-keys: |
            apt-${{ runner.os }}-

      - run: |
          sudo apt-get update
          sudo apt-get install -y \
          build-essential \
          libffi-dev \
          libldap2-dev \
          libpq-dev \
          libsasl2-dev \
          python3-dev \
          postgresql-contrib

      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Set Up uv
        uses: astral-sh/setup-uv@v5
        with:
          cache: true
          cache-dependency-glob: |
            **/uv.lock
            **/pyproject.toml

      - name: Cache uv + venv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv    
            .venv
          key: uv-venv-${{ runner.os }}-py${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/uv.lock', '**/pyproject.toml') }}
          restore-keys: |
            uv-venv-${{ runner.os }}-py${{ steps.setup-python.outputs.python-version }}-

      - name: Install dependencies
        working-directory: ${{ github.workspace }}
        run: |
          uv sync && uv pip install -e .

      - name: Activate venv for later steps
        shell: bash
        run: |
          echo "${{ github.workspace }}/.venv/bin" >> "$GITHUB_PATH"

      - name: Set Up TeamVault Config File
        working-directory: ${{ github.workspace }}
        run: |
          teamvault setup

      # Debugging purposes
      - name: Cat teamvault.cfg
        working-directory: ${{ github.workspace }}
        run: |
          cat $TEAMVAULT_CONFIG_FILE

      - name: Run Tests
        working-directory: ${{ github.workspace }}/teamvault
        run: |
          python manage.py test
